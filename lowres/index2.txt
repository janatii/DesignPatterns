<HTML><BODY	BGCOLOR		= #FFFFFF	TEXT		= #000000><!-- Index --><P>Names of design patterns appear in small capitals: e.g., Adapter.Page numbers in bold indicate the definition of a term. Numbers initalics indicate a diagram for the term. Letters after a diagram'spage number indicate the kind of diagram: a "c" denotes a classdiagram, an "i" denotes an interaction diagram, and an "o" denotesan object diagram. For example, 88co means that a class and objectdiagram appears on page 88.</P><H2>A</H2><DL><DT>abstract class 15, 16c, 359, 364, 365c</DT><DT>abstract coupling, <I>see</I> coupling, abstract</DT><DD>in Observer 296</DD><DT>Abstract Factory 87</DT><DD>extensibility of 91</DD><DD>in catalog summary 8</DD><DD>Lexi's use of 51</DD><DD>used to configure a subsystem 193</DD><DT>Abstract Factory</DT><DD>participant of Abstract Factory 88c, 89</DD><DT>abstract operation, <I>see</I> operation, abstract</DT><DD>use to implement Adapter 144</DD><DT>abstract syntax tree 244, 251, 331</DT><DD>class structure for 244c, 331c</DD><DD>constructing in Smalltalk 250</DD><DD>object structure for 244o</DD><DT>AbstractExpression</DT><DD>participant of Interpreter 245c, 245</DD><DT>Abstraction</DT><DD>participant of Bridge 153c, 154</DD><DT>AbstractProduct</DT><DD>participant of Abstract Factory 88c, 89</DD><DT>accumulating state 336</DT><DT>acquaintance 22, 359</DT><DD>C++, defined in 23</DD><DD>compared with aggregation 23</DD><DD>Smalltalk, defined in 23</DD><DT>Action, <I>see</I> Command</DT><DT>active iterator, <I>see</I> iterator, active</DT><DT>Ada 4, 21</DT><DT>Adaptee</DT><DD>participant of Adapter 141, 141c</DD><DT>Adapter 139</DT><DD>compared with Bridge 161, 219</DD><DD>compared with Decorator 184</DD><DD>compared with Proxy 216</DD><DD>in catalog summary 8</DD><DT>Adapter</DT><DD>participant of Adapter 141, 141c</DD><DT>adapter 140</DT><DD>class adapter 141, 141c</DD><DD>object adapter 141, 141c</DD><DD>parameterized 145</DD><DD>pluggable, <I>see</I> pluggable adapter</DD><DD>two-way 143, 143c</DD><DT>adorner 179</DT><DT>Aggregate</DT><DD>participant of Iterator 259, 259c</DD><DT>aggregate object 257</DT><DT>aggregation 22, 359</DT><DD>C++, defined in 23</DD><DD>compared with acquaintance 23</DD><DD>notation for 23</DD><DD>Smalltalk, defined in 23</DD><DT>Alexander, Christopher xiii, 2, 356, 358</DT><DT>algorithm</DT><DD>avoiding dependence on 24</DD><DD>defining steps of 326</DD><DD>family of 317</DD><DD>skeleton 327</DD><DT>AlternationExpression 244co, 343</DT><DD>implemented in Smalltalk 249</DD><DT>aluminum alloy 76</DT><DT>Ambassador, <I>see also</I> Proxy</DT><DD>C++ idiom 208</DD><DT>AnalogClock 303</DT><DT>analysis object model</DT><DD>transforming to design object model 353</DD><DT>ancestor class 361, <I>see</I> also class, parent</DT><DT>Anderson, Bruce xi, 357</DT><DT>AndExp 253</DT><DT>Andrew Toolkit</DT><DD>use of Observer 303</DD><DT>Application 107, 107c, 223o, 224ci, 231, 325, 325c</DT><DT>application programs 25</DT><DT>ApplicationWindow 53, 54c, 55c, 157, 233c, 234c</DT><DT>ArrayCompositor 42c, 315, 315c, 322</DT><DT>ASCII7Stream 183, 183c</DT><DT>aspect of an object 298</DT><DT>AssignmentNode 333c</DT><DT>associations, <I>see also</I> acquaintance, aggregation</DT><DD>in OMT 364</DD></DL><H2>B</H2><DL><DT>BTree 202</DT><DT>base class, <I>see</I> class, parent</DT><DT>Beck, Kent xi, 357</DT><DT>Bedrock</DT><DD>use of Decorator 179, 180</DD><DT>behavioral pattern 10, 221</DT><DD>comparison between class and object scope 221</DD><DD>discussion 345</DD><DT>black-box reuse, <I>see</I> reuse, black-box</DT><DT>block, Smalltalk 270</DT><DT>BNF form 247</DT><DD>examples of 243, 248, 251</DD><DT>BombedMazeFactory 93</DT><DT>BombedMazeGame 115</DT><DT>BombedWall 93, 94, 124</DT><DT>Booch Components</DT><DD>use of Iterator 270</DD><DD>use of Strategy 323</DD><DT>Booch, Grady xiii, 260</DT><DT>Booch method 363</DT><DT>Boolean</DT><DD>expression 251</DD><DD>variable 254</DD><DT>BooleanExp 252</DT><DT>Border 44, 45c, 46o</DT><DT>BorderDecorator 176o, 176c, 180</DT><DT>Bridge 151</DT><DD>compared with Adapter 219</DD><DD>configured by Abstract Factory 155</DD><DD>in catalog summary 8</DD><DD>Lexi's use of 58</DD><DD>use of delegation in 21</DD><DT>bridge 152</DT><DT>broadcast communication 296</DT><DT>Builder 97</DT><DD>compared with Abstract Factory 105, 135</DD><DD>compared with Prototype 135</DD><DD>in catalog summary 8</DD><DD>use in compiler example 189</DD><DT>Builder</DT><DD>participant of Builder 98, 98c</DD><DT>Bureaucrat 232, <I>see also</I> Chain of Responsibility</DT><DT>Button 50c, 223o, 224ci, 229, 279</DT></DL><H2>C</H2><DL><DT>C 4</DT><DT>Calder, Paul 33, 38</DT><DT>callback function 235</DT><DT>Caretaker</DT><DD>participant of Memento 285, 285c, 286i</DD><DT>Cargill, Tom 308</DT><DT>Chain of Responsibility 223</DT><DD>combined with Composite 166, 232</DD><DD>compared with Mediator 348</DD><DD>compared with Observer 348</DD><DD>defined by parent references 166, 232</DD><DD>in catalog summary 8</DD><DD>use of delegation in 21</DD><DT>ChangeManager 282, 299, 300c</DT><DT>Character 38, 38c</DT><DT>character</DT><DD>represented as object 38, 195196</DD><DT>Cheshire Cat 155</DT><DT>Choices operating system</DT><DD>use of Facade 192</DD><DD>use of Proxy 209</DD><DT>class 14, 359</DT><DD>abstract, <I>see</I> abstract class</DD><DD>adapter, <I>see</I> adapter, class</DD><DD>compared with type 16</DD><DD>concrete, <I>see</I> concrete class</DD><DD>derived 360</DD><DD>friend, <I>see</I> friend class</DD><DD>inability to alter 24</DD><DD>inheritance, <I>see</I> inheritance</DD><DD>instance 15</DD><DD>library, <I>see</I> toolkit</DD><DD>mixin, <I>see</I> mixin class</DD><DD>notation for 15, 363</DD><DD>parent 15, 361</DD><DD>subclass 15</DD><DD>template, <I>see</I> template</DD><DT>class diagram 363, 365c, 359</DT><DT>class hierarchy</DT><DD>adding operations to 356</DD><DD>connecting parallel 109, 258</DD><DD>explosion 25, 43, 151, 177</DD><DD>minimizing size of 113, 120, 177, 277, 317, 348</DD><DD>visiting multiple 336</DD><DT>class operation 359</DT><DD>alternatives provided by Singleton 128</DD><DT>Client</DT><DD>participant of Abstract Factory 88c, 89</DD><DD>participant of Adapter 141, 141c</DD><DD>participant of Builder 98, 98c, 99i</DD><DD>participant of Chain of Responsibility 225ci, 226, 348i</DD><DD>participant of Command 236, 236c, 237i</DD><DD>participant of Composite 164c, 165</DD><DD>participant of Flyweight 198c, 199</DD><DD>participant of Interpreter 245c, 246</DD><DD>participant of Prototype 119, 119c</DD><DT>client 11</DT><DD>isolating concrete classes from 89</DD><DT>ClockTimer 302</DT><DT>clone operation 117</DT><DD>used in Prototype 117</DD><DD>implementing 121</DD><DT>cloned object 117</DT><DD>initializing 121</DD><DT>CLOS 4, 260, 338</DT><DT>closure 260, 267</DT><DT>Coad, Peter 357</DT><DT>code structure</DT><DD>run-time versus compile-time 23</DD><DT>CodeGenerationVisitor 332c</DT><DT>Colleague</DT><DD>communicating with Mediator 278, 282</DD><DD>participant of Mediator 276co, 277, 348i</DD><DT>Command 233</DT><DD>combined with Memento 239, 287</DD><DD>combined with Prototype 238</DD><DD>in catalog summary 8</DD><DD>use in Lexi 64</DD><DT>Command 60, 61c, 233, 233c, 239</DT><DD>configured in MenuItem 61</DD><DD>history of 62</DD><DD>participant of Command 236, 236c, 237i, 347i</DD><DT>command</DT><DD>C++ idiom, <I>see</I> functor</DD><DD>copying before execution 238</DD><DD>history, <I>see</I> history list</DD><DD>implemented through C++ templates 239, 240</DD><DD>intelligence of 238</DD><DT>common vocabulary 352</DT><DT>communication</DT><DD>encapsulated or distributed 346</DD><DD>between Strategy and Context 318</DD><DD>between Visitor and Element 337</DD><DT>compilation dependencies</DT><DD>reducing using Facade 188</DD><DT>Compiler 185, 186c, 191</DT><DT>compiler</DT><DD>example in Facade 185, 186c, 188</DD><DD>implemented using Visitor 331</DD><DD>Smalltalk, <I>see</I> RTL Smalltalk compiler</DD><DT>Component</DT><DD>participant of Composite 164c, 165, 168</DD><DD>participant of Decorator 177, 177c</DD><DT>Composite 163</DT><DD>caching children of 169</DD><DD>child management 167</DD><DD>combined with Interpreter 255</DD><DD>combined with Iterator 262</DD><DD>combined with Visitor 339</DD><DD>compared with Decorator 219220</DD><DD>compared with Interpreter 247</DD><DD>data structure for 169, 170</DD><DD>in catalog summary 8</DD><DD>interface of 167</DD><DD>Lexi's use of 40</DD><DD>parent references 166</DD><DD>sharing components 166</DD><DD>use in Model/View/Controller 5</DD><DT>Composite</DT><DD>participant of Composite 164c, 165, 165o, 168</DD><DT>CompositeEquipment 171</DT><DT>Composition 41, 42c, 315, 315c, 320</DT><DT>composition, <I>see</I> object composition</DT><DT>Compositor 41, 42, 315, 315c, 321</DT><DD>interface 41</DD><DT>CompressingStream 183c, 184</DT><DT>concrete class, 15, 359</DT><DD>avoiding specification of 24</DD><DD>isolating clients from 89</DD><DT>ConcreteAggregate</DT><DD>participant of Iterator 259, 259c</DD><DT>ConcreteBuilder</DT><DD>participant of Builder 98c, 99, 99i</DD><DT>ConcreteCommand</DT><DD>participant of Command 236, 236c, 238</DD><DT>ConcreteComponent</DT><DD>participant of Decorator 177, 177c</DD><DT>ConcreteDecorator</DT><DD>participant of Decorator 177c, 178</DD><DT>ConcreteElement</DT><DD>participant of Visitor 334, 334c, 335i</DD><DT>ConcreteFactory</DT><DD>participant of Abstract Factory 89</DD><DT>ConcreteFlyweight</DT><DD>participant of Flyweight 198co, 199</DD><DT>ConcreteHandler</DT><DD>participant of Chain of Responsibility 225c, 226</DD><DT>ConcreteImplementor</DT><DD>participant of Bridge 153c, 154</DD><DT>ConcreteIterator</DT><DD>participant of Iterator 259, 259c</DD><DT>ConcreteObserver</DT><DD>participant of Observer 294c, 295, 295i</DD><DT>ConcreteProduct</DT><DD>participant of Abstract Factory 88, 89</DD><DD>participant of Factory Method 108, 108c</DD><DT>ConcretePrototype</DT><DD>participant of Prototype 119, 119c</DD><DT>ConcreteState</DT><DD>participant of State 307, 307c</DD><DT>ConcreteStrategy</DT><DD>participant of Strategy 316c, 316</DD><DT>ConcreteSubject</DT><DD>participant of Observer 294c, 295, 295i</DD><DT>ConcreteVisitor</DT><DD>participant 334, 334c, 335i</DD><DT>conditional statements</DT><DD>avoiding using State 307</DD><DD>avoiding using Strategy 317</DD><DT>consolidation phase of lifecycle 353</DT><DT>constraint solving 282, 283</DT><DD>see also ThingLab, QOCA</DD><DT>ConstraintSolver 283284, 288</DT><DT>constructor 360</DT><DT>Context 252</DT><DD>participant of Interpreter 245c, 246</DD><DD>participant of State 306, 306c</DD><DD>participant of Strategy 316c, 316</DD><DT>control flow</DT><DD>encapsulating, <I>see</I> Mediator</DD><DD>inversion of 27</DD><DT>Coplien, James 125, 153, 160, 242, 313, 357</DT><DT>copy</DT><DD>deep 121</DD><DD>on write 210</DD><DD>shallow 121</DD><DT>CountingMazeBuilder 104</DT><DT>coupling 360</DT><DD>abstract 188, 278, 296, 359</DD><DD>loose 24, 26, 277, 347, <I>see also</I> decoupling</DD><DD>reducing 24, 187, 188, 223, 226</DD><DD>tight 24</DD><DT>CreateMaze operation 84</DT><DD>Abstract Factory variant (C++) 92</DD><DD>Abstract Factory variant (Smalltalk) 94</DD><DD>Builder variant 102</DD><DD>Factory Method variant 114</DD><DD>Prototype variant (Smalltalk) 123, 125</DD><DT>creational pattern 10, 81</DT><DD>discussion of 135</DD><DT>Creator</DT><DD>participant of Factory Method 108, 108c</DD><DD>implementation of 111, 113</DD><DT>Cursor, <I>see</I> Iterator</DT><DT>cursor, <I>see</I> iterator, cursor</DT></DL><H2>D</H2><DL><DT>data member 360</DT><DT>DebuggingGlyph 182</DT><DT>Decorator 175</DT><DD>compared with Adapter 175, 184</DD><DD>compared with Composite 44, 173, 219220</DD><DD>compared with Proxy 216, 219220</DD><DD>compared with Strategy 179</DD><DD>in catalog summary 8</DD><DD>Lexi's use of 45c, 46o, 47</DD><DD>lightweight versus heavyweight 179</DD><DT>Decorator 176, 180</DT><DD>participant of Decorator 177, 177c, 180o</DD><DT>decorator 175</DT><DT>decoupling, <I>see also</I> coupling, loose</DT><DD>interface and implementation 154</DD><DD>senders and receivers 346</DD><DT>deep copy, <I>see</I> copy, deep</DT><DT>delegate 20, 144</DT><DT>delegation 20, 278, 360</DT><DD>compared with inheritance 2021</DD><DD>implementing pluggable adapters with 144</DD><DD>patterns that rely on 21</DD><DT>dependency 293</DT><DD>managing complex 299</DD><DT>Dependents, <I>see</I> Observer</DT><DT>derived class, <I>see</I> class, derived</DT><DT>design</DT><DD>dj-vu 2</DD><DD>density 358</DD><DD>documenting with patterns 27, 352</DD><DD>for change 23</DD><DD>poetry of 356</DD><DD>for reuse 23</DD><DT>design object model 353</DT><DT>design pattern 360</DT><DD>adjunct to design methodology 353</DD><DD>aspects of design varied by 30</DD><DD>benefits 351</DD><DD>catalog summary 8</DD><DD>catalog template 6</DD><DD>classification 10</DD><DD>compared with frameworks 28</DD><DD>diagram of relationships 12</DD><DD>documenting designs with 27, 352</DD><DD>essential elements 3</DD><DD>finding 355</DD><DD>history of 355</DD><DD>how to use 29</DD><DD>purpose 10</DD><DD>refactoring with 353</DD><DD>scope 10</DD><DD>selection of 28</DD><DD>table of 10</DD><DT>destructor 360</DT><DD>ensuring iterator's is called 266</DD><DT>Dialog 223, 231</DT><DT>DialogDirector 274o, 275ci, 278</DT><DT>DialogWindow 53, 54c, 55c</DT><DT>DigitalClock 302</DT><DT>Director</DT><DD>participant of Builder 98c, 99, 99i</DD><DT>DirectoryBrowser 144, 144c, 145c</DT><DT>discretionary glyph 75</DT><DT>dispatch</DT><DD>double 338</DD><DD>multiple 339</DD><DD>single 338</DD><DT>Doc 205, <I>see also</I> Lexi</DT><DT>Document 107, 107c, 233c, 234, 234c, 325, 325c</DT><DT>document</DT><DD>color 42, 322</DD><DD>formatting 40</DD><DD>logical structure 40</DD><DD>physical structure 35</DD><DT>documenting design with patterns 27, 352</DT><DT>doesNotUnderstand message</DT><DD>used to implement Chain of Responsibility 229</DD><DD>used to implement Proxy 212, 215</DD><DT>Domain 192, 192c</DT><DT>Door 82c, 83</DT><DD>extensions for Prototype 123</DD><DT>double-dispatch, <I>see</I> dispatch, double</DT><DT>downcast 91</DT><DT>Dylan 4</DT><DD>use of Memento 289</DD><DT>dynamic binding 14, 360</DT><DT>dynamic inheritance 309</DT><DT>dynamic_cast in C++ 91, 168</DT></DL><H2>E</H2><DL><DT>e-mail address</DT><DD>reaching the authors xii</DD><DT>Eiffel 17, 21</DT><DT>Element</DT><DD>participant of Visitor 334, 334c</DD><DT>encapsulation 11, 360</DT><DD>breaking with inheritance 19</DD><DD>breaking with Visitor 337</DD><DD>preserving boundaries of 286</DD><DD>of algorithms, <I>see</I> Strategy</DD><DD>of complex update semantics, 299, <I>see also</I> ChangeManager</DD><DD>of concept that varies 29, 54</DD><DD>of document analysis and traversal 71</DD><DD>of protocol between objects, <I>see</I> Mediator</DD><DD>of how objects are created, <I>see</I> Abstract Factory, Builder,</DD><DD>Prototype</DD><DD>of traversal, <I>see</I> Iterator</DD><DD>of requests 59, <I>see also</I> Command</DD><DD>of state-specific behavior, <I>see</I> State</DD><DT>EnchantedMazeFactory 93</DT><DT>envelope-letter idiom 313</DT><DT>Equipment 170, 340</DT><DT>EquipmentVisitor 341</DT><DT>error accumulation</DT><DD>avoiding during undo/redo 239</DD><DT>ET++</DT><DD>use of Abstract Factory 95</DD><DD>use of Adapter 126, 148</DD><DD>use of Bridge 160</DD><DD>use of Builder 105</DD><DD>use of Chain of Responsibility 232</DD><DD>use of Composite 172</DD><DD>use of Command 242</DD><DD>use of Decorator 182, 183</DD><DD>use of Facade 192</DD><DD>use of Factory Method 115</DD><DD>use of Flyweight 206</DD><DD>use of Iterator 261</DD><DD>use of Mediator 281</DD><DD>use of Observer 303</DD><DD>use of Prototype 120, 125</DD><DD>use of Proxy 216</DD><DD>use of Strategy 322323</DD><DT>ET++SwapsManager</DT><DD>use of Strategy 323</DD><DT>ETgdb 125</DT><DT>expansion phase of lifecycle 353, 354</DT><DT>explosion, <I>see</I> class hierarchy, explosion</DT><DT>ExtendedHandler 228</DT><DT>external iterator, <I>see</I> iterator, external</DT><DT>extrinsic state, <I>see</I> state, extrinsic</DT></DL><H2>F</H2><DL><DT>Facade 185</DT><DD>compared with Mediator 193, 282</DD><DD>in catalog summary 8</DD><DD>use in Choices 192</DD><DT>Facade</DT><DD>participant of Facade 185c, 187, 187c</DD><DT>facade 185</DT><DT>Factory Method 107</DT><DD>in catalog summary 8</DD><DD>language-specific variants 112</DD><DD>parameterized with product identifier 110</DD><DD>used to implement Abstract Factory 90, 91, 110</DD><DD>used to create an iterator 258</DD><DT>FileStream 183, 183c</DT><DT>Flyweight 195</DT><DD>combined with Composite 167, 200</DD><DD>combined with Interpreter 247</DD><DD>combined with State 308</DD><DD>in catalog summary 9</DD><DD>Lexi's use of 39</DD><DD>participant of Flyweight 198, 198co</DD><DT>flyweight 196, 196o</DT><DD>managing shared 200</DD><DT>FlyweightFactory 204</DT><DD>participant of Flyweight 198co, 199</DD><DT>FontDialogDirector 274, 274o, 275ci</DT><DT>Foote, Brian 353</DT><DT>forwarding requests 229</DT><DT>framework 26, 360</DT><DD>compared with design patterns 28</DD><DD>documenting with patterns 27</DD><DD>graphical editor 117</DD><DD>see Bedrock</DD><DD>see Choices</DD><DD>see ET++</DD><DD>see HotDraw</DD><DD>see MacApp</DD><DD>see NEXTSTEP</DD><DD>see NeXT AppKit</DD><DD>see RApp</DD><DD>see RTL Smalltalk compiler</DD><DD>see Unidraw</DD><DD>trade-offs associated with 27</DD><DT>Fresco 344</DT><DT>friend class 360</DT><DD>used to grant Iterator privileged access to collection 262</DD><DD>used to support Memento 287</DD><DT>functor 242</DT><DT>future cash flow 323</DT></DL><H2>G</H2><DL><DT>gdb 126</DT><DT>generics 21</DT><DT>Glyph 38, 38c, 42c, 43o, 45c, 46o, 50c, 54c, 67c</DT><DD>implemented as a flyweight 201204</DD><DD>interface 39</DD><DD>interface for traversal 66</DD><DT>Glue, <I>see</I> Facade</DT><DT>GlyphArrayIterator 67, 67c</DT><DT>GNU gdb 126</DT><DT>grammar 243</DT><DD>maintaining complex 247</DD><DT>Graphic 163c, 208c, 213</DT><DT>GraphicTool 117, 118c</DT><DT>guaranteed receipt of request 226</DT><DT>GUIFactory 49, 50c, 51</DT></DL><H2>H</H2><DL><DT>Hamlet 1</DT><DT>Handle/Body, <I>see also</I> Bridge</DT><DD>C++ idiom 155, 160</DD><DT>Handler</DT><DD>participant of Chain of Responsibility 225, 225ci, 348i</DD><DT>hardware platform</DT><DD>isolating application from 24</DD><DT>help</DT><DD>context-sensitive 223</DD><DD>on-line 223</DD><DT>HelpHandler 224, 224c, 227, 229</DT><DT>history list 6264, 238</DT><DD>copying commands onto 238</DD><DT>Hollywood principle 327</DT><DT>hook operation 326, 328</DT><DD>in Abstract Factory 109</DD><DD>in Factory Method 109</DD><DD>in Proxy 212</DD><DD>in Template Method 326, 328</DD><DT>HotDraw</DT><DD>use of State 313</DD><DT>hub of communication 274</DT><DT>hyphenation 64</DT></DL><H2>I</H2><DL><DT>IconWindow 53, 54c, 151152, 151c, 157</DT><DT>Image 207o, 208c, 213</DT><DT>ImageProxy 207o, 208c</DT><DT>Implementor</DT><DD>participant of Bridge 153c, 154</DD><DT>implicit receiver, <I>see</I> receiver, implicit</DT><DT>incremental changes 287</DT><DT>inheritance 15, 360</DT><DD>C++, defined in 17</DD><DD>class versus interface 16</DD><DD>combined with polymorphism 18</DD><DD>compared with object composition 18, 178</DD><DD>compared with parameterized types 21</DD><DD>dynamic 309</DD><DD>Eiffel, defined in 17</DD><DD>implementation 17, 360</DD><DD>interface 17, 360</DD><DD>mixin, <I>see</I> mixin class</DD><DD>notation for 15, 364, 365c</DD><DD>proper use of 18</DD><DD>reuse through 18</DD><DD>Smalltalk, defined in 17</DD><DT>inorder traversal, <I>see</I> traversal, inorder</DT><DT>instance, <I>see also</I> class, instance</DT><DD>ensuring uniqueness, <I>see</I> Singleton</DD><DD>variable 15, 360</DD><DT>instantiation 15</DT><DD>abstracting process of 48</DD><DD>notation for 15, 364, 365c</DD><DT>integrated circuit 323</DT><DT>interaction diagram 7, 366</DT><DD>in Builder 99i</DD><DD>in Chain of Responsibility 224i, 348i</DD><DD>in Command 237i, 347i</DD><DD>in Mediator 274i, 348i</DD><DD>in Memento 286i</DD><DD>in Observer 295i, 347i</DD><DD>in Visitor 335i</DD><DD>Lexi's Visitor 74i</DD><DT>interface 13</DT><DD>benefits of programming to 18</DD><DD>bloat 257</DD><DD>conversion, <I>see</I> Adapter</DD><DD>for iteration 262</DD><DD>inheritance 13, 17</DD><DD>narrow versus wide in Memento 285</DD><DD>specifying in C++ 17</DD><DD>simplifying subsystems, <I>see</I> Facade</DD><DT>internal iterator, <I>see</I> iterator, internal</DT><DT>Interpreter 243</DT><DD>combined with Composite 255</DD><DD>combined with Visitor 247, 255</DD><DD>in catalog summary 9</DD><DT>InterViews</DT><DD>use of Abstract Factory 95</DD><DD>use of Adapter 148</DD><DD>use of Command 242</DD><DD>use of Composite 172</DD><DD>use of Decorator 182</DD><DD>use of Flyweight 205</DD><DD>use of Observer 303</DD><DD>use of Singleton 133</DD><DD>use of Strategy 320, 322323</DD><DT>intrinsic state, <I>see</I> state, intrinsic</DT><DT>inversion of control flow 27</DT><DT>invitation 358</DT><DT>Invoker</DT><DD>participant of Command 236, 236c, 237i, 347i</DD><DT>IRIS Inventor</DT><DD>use of Visitor 344</DD><DT>Iterator 257</DT><DD>combined with Composite 362</DD><DD>combined with Visitor 339</DD><DD>compared with Visitor 336</DD><DD>in catalog summary 9</DD><DD>use in Lexi 69</DD><DT>Iterator 67, 67c, 258c, 263, 372</DT><DD>participant of Iterator 259, 259c</DD><DT>iterator 66, 257, 339</DT><DD>access to aggregate 262</DD><DD>active 260</DD><DD>alternative to in Smalltalk 270</DD><DD>controlling 260</DD><DD>cursor 261</DD><DD>ensuring deletion of 266</DD><DD>external 260, 339, 269</DD><DD>interface to 261, 263</DD><DD>internal 260, 267, 339, <I>see also</I> ListTraverser</DD><DD>null 262, <I>see also</I> NullIterator</DD><DD>over recursive structures 262</DD><DD>parameterized with an operation 267</DD><DD>passive 260</DD><DD>polymorphic 258, 261, 265</DD><DD>privileged access to Aggregate 262</DD><DD>robust 261</DD></DL><H2>K</H2><DL><DT>Kit, <I>see also</I> Abstract Factory</DT><DD>in InterViews 95</DD><DT>Knuth, Donald 357</DT></DL><H2>L</H2><DL><DT>lazy initialization 112</DT><DT>Leaf</DT><DD>participant of Composite 164c, 165, 165o, 168</DD><DT>Lempel-Ziv compression 183</DT><DT>Lexi 33</DT><DD>document structure 35</DD><DD>document traversal and analysis 64</DD><DD>look-and-feel standards 47</DD><DD>multiple window systems 51</DD><DD>user interface 33, 34</DD><DD>user operations 58</DD><DT>libg++</DT><DD>use of Bridge 160</DD><DT>lifecycle of software 353, 354</DT><DT>Linton, Mark 344</DT><DT>List 257, 257c, 258c, 263, 369</DT><DT>list box 274</DT><DT>list traversal 257</DT><DT>ListBox 274o, 275ci, 279</DT><DT>ListIterator 67, 257, 257c, 258c, 264, 372</DT><DT>ListTraverser 267</DT><DT>LiteralExpression 244co, 344</DT><DD>implemented in Smalltalk 250</DD><DT>look-and-feel standards 87</DT><DD>support in Lexi 35, 47</DD></DL><H2>M</H2><DL><DT>MacApp</DT><DD>use of Chain of Responsibility 232</DD><DD>use of Command 242</DD><DD>use of Decorator 179, 180</DD><DD>use of Factory Method 113, 115</DD><DT>Macbeth 1</DT><DT>MacFactory 50c</DT><DT>Macintosh 48, 52</DT><DT>MacroCommand 235, 235c, 241</DT><DT>magic token 346</DT><DT>Manipulator 109, 110c</DT><DT>MapSite 82, 82c</DT><DT>Marriage of Convenience 149</DT><DT>Maze 82c, 84</DT><DT>MazeBuider 101</DT><DT>MazeFactory 92</DT><DD>as singleton 133</DD><DT>MazeGame 84, 114</DT><DT>MazePrototypeFactory 122</DT><DT>Mediator 273</DT><DD>combined with Observer 299</DD><DD>compared with Chain of Responsibility 348</DD><DD>compared with Facade 282</DD><DD>compared with Observer 346, 348</DD><DD>in catalog summary 9</DD><DD>use of delegation in 21</DD><DT>Mediator</DT><DD>communicating with Colleague 278, 282</DD><DD>participant of Mediator 276co, 277, 348i</DD><DD>omitting abstract class of 278</DD><DT>mediator 274</DT><DT>member function 361, <I>see also</I> operation</DT><DT>Memento 283</DT><DD>in catalog summary 9</DD><DT>Memento</DT><DD>combined with Command 239, 287</DD><DD>participant of Memento 285, 285c, 286i</DD><DT>memento 284</DT><DD>costs associated with 286</DD><DD>language support for 287</DD><DT>MemoryStream 183</DT><DT>Menu 50c, 233c</DT><DT>menu 233</DT><DD>configuring 60, 234</DD><DD>pull-down 58</DD><DT>MenuItem 59, 61c, 233, 233c</DT><DT>metaclass 133, 361</DT><DT>method 361, <I>see also</I> operation</DT><DT>Microsoft Windows 52</DT><DT>mixin class 16, 16c, 361</DT><DT>Model/View/Controller 4, 5</DT><DD>use of Composite 5, 172</DD><DD>use of Factory Method 115</DD><DD>use of Observer 5, 303</DD><DD>use of Strategy 6</DD><DT>MonoGlyph 44, 45c</DT><DT>Motif 35, 47, 48, 49, 51, 87</DT><DT>MotifFactory 49, 50c</DT><DT>multiple dispatch, <I>see</I> dispatch, multiple</DT><DT>multiple inheritance, <I>see also</I> mixin class</DT><DD>used to implement class adapter 141</DD><DD>used to implement Bridge 156</DD><DT>MVC, <I>see</I> Model/View/Controller</DT><DT>Meyer, Bertrand 149</DT></DL><H2>N</H2><DL><DT>naming conventions 29, 31</DT><DD>Factory Method 31, 113</DD><DD>Template Method 329</DD><DD>Visitor 337</DD><DT>NeXT AppKit</DT><DD>use of Adapter 149</DD><DD>use of Bridge 160</DD><DD>use of Chain of Responsibility 232</DD><DD>use of Template Method 329</DD><DT>NEXTSTEP</DT><DD>use of Adapter 145</DD><DD>use of Proxy 208, 212, 216</DD><DT>Node 333c</DT><DT>NodeVisitor 332c</DT><DT>nonterminal symbol 246</DT><DT>NonTerminalExpression</DT><DD>participant of Interpreter 245c, 246</DD><DT>notification 294</DT><DT>null iterator, <I>see</I> iterator, null</DT><DT>NullIterator 67c, 6768, 262</DT><DT>NXProxy 208, 212</DT></DL><H2>O</H2><DL><DT>object 11, 361</DT><DD>adapter, <I>see</I> adapter, object</DD><DD>acquaintance 22</DD><DD>aggregation 22</DD><DD>as argument to request 345</DD><DD>aspect of 298</DD><DD>avoiding dependence on implementation of 24</DD><DD>composition, <I>see</I> object composition</DD><DD>finding 11</DD><DD>granularity of 13, <I>see also</I> Flyweight</DD><DD>guts 179</DD><DD>reference 361</DD><DD>shared, <I>see</I> Flyweight</DD><DD>skin 179</DD><DD>specifying implementation of 14</DD><DD>specifying interface to 13</DD><DT>object composition      18, 361</DT><DD>compared with inheritance 1820</DD><DD>compared with parameterized types 22</DD><DD>reuse through 19</DD><DT>object diagram 364, 361</DT><DT>Objects for States, <I>see</I> State</DT><DT>Object Modeling Technique 7, 14, 363, 364</DT><DT>Objective C 90, 120, 121, 135, 144</DT><DT>Objectory 363</DT><DT>ObjectWindows</DT><DD>use of Iterator 270</DD><DD>use of Strategy 323</DD><DT>ObjectWorks\Smalltalk, <I>see also</I> Smalltalk</DT><DD>use of Adapter 148149</DD><DD>use of Decorator 182</DD><DD>use of Facade 191</DD><DT>Observer 293</DT><DD>combined with Mediator 278, 282</DD><DD>compared with Chain of Responsibility 346, 348</DD><DD>compared with Mediator 346, 348</DD><DD>in Model/View/Controller 5</DD><DD>in catalog summary 8</DD><DD>limiting unexpected updates in 296</DD><DT>Observer 300</DT><DD>combining with Subject 300</DD><DD>participant of Observer 294c, 295, 295i, 300c, 347i</DD><DT>OMT, <I>see</I> Object Modeling Technique</DT><DT>operation 11, 361</DT><DD>abstract 15, 359</DD><DD>adding to classes 335</DD><DD>avoiding dependence on specific 24</DD><DD>class, <I>see</I> class operation</DD><DD>concrete 327</DD><DD>dispatch, <I>see</I> dispatch</DD><DD>hook, <I>see</I> hook operation</DD><DD>overriding 16</DD><DD>primitive 327, 329</DD><DT>Orbix</DT><DD>use of Factory Method 116</DD><DT>Originator</DT><DD>participant of Memento 285, 285c, 286i</DD><DT>originator 284</DT><DT>overloading</DT><DD>used to implement Proxy 211</DD><DD>used to implement Visitor 72, 337</DD></DL><H2>P</H2><DL><DT>parameterized types 21, 361, <I>see also</I> template</DT><DD>compared with inheritance 22</DD><DD>compared with composition 22</DD><DT>parent class, <I>see</I> class, parent</DT><DT>parent references</DT><DD>defined in Composite 166</DD><DT>parser 247</DT><DT>part-whole, <I>see</I> recursive composition</DT><DD>see also aggregation</DD><DT>Pascal 4</DT><DT>passive iterator, <I>see</I> iterator, passive</DT><DT>PassivityWrapper 182</DT><DT>path</DT><DD>specifying multi-segment shapes 57</DD><DT>pattern language 356</DT><DT>Pattern Languages of Programs 357</DT><DT>pattern matching 243</DT><DT>persistence 209</DT><DT>Picture 163c, 164o</DT><DT>PLoP, <I>see</I> Pattern Languages of Programs</DT><DT>pluggable adapter 142</DT><DD>implementation of 144145, 144c, 145c, 148, 149c</DD><DT>PMFactory 50c</DT><DT>PMIconWindow 151, 151c</DT><DT>PMWindow 151, 151c</DT><DT>PMWindowImp 152, 152c, 158159</DT><DT>Point 373</DT><DT>Policy, <I>see</I> Strategy</DT><DT>polymorphic iteration 258</DT><DD>implementing in C++ 261</DD><DT>polymorphism 14, 361</DT><DD>used with inheritance 18</DD><DT>postorder traversal, <I>see</I> traversal, postorder</DT><DT>preorder traversal, <I>see</I> traversal, preorder</DT><DT>PreorderIterator 67</DT><DD>member functions 6869</DD><DT>Presentation Manager 35, 48, 52, 56, 57, 87, 151, 158</DT><DT>PricingVisitor 341</DT><DT>PrintDialog 223o, 224i</DT><DT>private inheritance 361, <I>see also</I> inheritance, implementation</DT><DT>Product</DT><DD>participant of Builder 98c, 99</DD><DD>participant of Factory Method 108, 108c</DD><DT>product objects 49</DT><DD>changing at run-time 119</DD><DD>creating in Abstract Factory 90</DD><DD>exchanging 89</DD><DD>family of 87</DD><DD>varying representation of 100</DD><DT>protection proxy, <I>see</I> proxy, protection</DT><DT>protocol 361</DT><DT>Prototype 117</DT><DD>compared with Abstract Factory 126, 135</DD><DD>combined with Command 238</DD><DD>compared with Factory Method 116, 120</DD><DD>in catalog summary 9</DD><DD>participant of Prototype 119, 119c</DD><DD>used to implement Abstract Factory 90</DD><DT>prototype 117</DT><DT>prototype manager 121</DT><DT>prototyping phase of lifecycle 353</DT><DT>Proxy 207</DT><DD>combined with Iterator 262</DD><DD>compared with Decorator 220</DD><DD>in catalog summary 9</DD><DT>Proxy</DT><DD>participant of Proxy 209co, 209</DD><DT>proxy 207</DT><DD>protection 208, 210</DD><DD>remote 208, 210</DD><DD>virtual 208, 210</DD><DT>pseudocode 16, 16c, 365c</DT><DT>Publish-Subscribe, <I>see</I> Observer</DT><DT>pull model 298</DT><DT>pull-down menu, <I>see</I> menu, pull-down</DT><DT>purpose of design pattern, <I>see</I> design pattern, purpose</DT><DT>push model 298</DT></DL><H2>Q</H2><DL><DT>QOCA</DT><DD>use of Adapter 143</DD><DD>use of Interpreter 255</DD><DD>use of Memento 291</DD></DL><H2>R</H2><DL><DT>RApp</DT><DD>use of Strategy 323</DD><DT>RealSubject</DT><DD>participant of Proxy 209co, 210</DD><DT>Receiver</DT><DD>participant of Command 236, 236c, 237i, 238</DD><DT>receiver 361</DT><DD>decoupling from sender 346</DD><DD>implicit 224</DD><DT>Rect 374</DT><DT>Rectangle 20, 20c</DT><DT>recursive composition 36, <I>see also</I> Composite</DT><DD>iteration over 262</DD><DD>of document structure 36</DD><DD>of graphic elements 163</DD><DD>of part-whole structures 164</DD><DT>redesign, causes of 24</DT><DT>redo, <I>see</I> undo/redo</DT><DT>refactoring 326, 353</DT><DT>reference counting 210</DT><DT>RefinedAbstraction</DT><DD>participant of Bridge 153c, 154</DD><DT>regular expression 243</DT><DD>representing in Smalltalk 248</DD><DT>RegularExpression 244c</DT><DT>remote proxy, <I>see</I> proxy, remote</DT><DT>RepetitionExpression 244co, 343</DT><DD>implemented in Smalltalk 249</DD><DT>request 11, 361</DT><DD>automatic forwarding of 229</DD><DD>encapsulation of 59, <I>see also</I> Command</DD><DD>guaranteed receipt of 226</DD><DD>representing 227</DD><DD>sequencing 234</DD><DT>Responder 232</DT><DT>reuse</DT><DD>black-box 19, 354, 359</DD><DD>by composition 19</DD><DD>by parameterized types 21</DD><DD>by subclassing 19</DD><DD>code 26</DD><DD>designing for 2425</DD><DD>frameworks 26</DD><DD>internal 25</DD><DD>maximizing 23</DD><DD>of implementation 18</DD><DD>toolkits 26</DD><DD>white-box 19, 354, 362</DD><DT>Rich Text Format 97</DT><DT>robust iterator, <I>see</I> iterator, robust</DT><DT>Room 82c, 83</DT><DT>RTF, <I>see</I> Rich Text Format</DT><DT>RTFReader 97, 97c</DT><DT>RTL Smalltalk compiler</DT><DD>use of Composite 172</DD><DD>use of Strategy 323</DD></DL><H2>S</H2><DL><DT>scope of design pattern, <I>see</I> design pattern, scope</DT><DT>Scrollbar 50c</DT><DT>ScrollDecorator 176o, 176c</DT><DT>Scroller 45, 46o</DT><DT>Self 4, 121, 309</DT><DT>sender</DT><DD>decoupling from receiver 346</DD><DT>SequenceExpression 244co, 343</DT><DD>implemented in Smalltalk 249</DD><DT>sequencing requests 234</DT><DT>shallow copy, <I>see</I> copy, shallow</DT><DT>Shape 139, 140c, 146</DT><DT>shrinkability 320</DT><DT>signature 13, 361</DT><DT>SimpleCompositor 42, 42c, 315, 315c, 321</DT><DT>single static assignment form, SSA 172</DT><DT>single-dispatch, <I>see</I> dispatch, single</DT><DT>Singleton 127</DT><DD>C++ implementation 129, 131</DD><DD>in catalog summary 9</DD><DD>registry of 130</DD><DD>subclassing 130</DD><DD>used to implement Abstract Factory 90</DD><DT>Singleton</DT><DD>participant of Singleton 127c, 128</DD><DT>Sketchpad 125</DT><DT>SkipList 258c, 265</DT><DT>skiplist 258</DT><DT>Smalltalk-80, <I>see also</I> ObjectWorks\Smalltalk, Smalltalk/V</DT><DD>use of Builder 105</DD><DD>use of Composite 172</DD><DD>use of Factory Method 115</DD><DD>use of Interpreter 251</DD><DD>use of Iterator 270</DD><DD>use of Observer 303</DD><DD>use of Singleton 133</DD><DD>use of Visitor 344</DD><DT>Smalltalk/V</DT><DD>use of Interpreter 251</DD><DD>use of Mediator 278, 281</DD><DT>smart pointers 209</DT><DT>smart references 209</DT><DT>software platform</DT><DD>isolating application from 24</DD><DT>Solitaire, <I>see</I> Singleton</DT><DT>SolverState 283284</DT><DT>SPECTalk</DT><DD>use of Interpreter 255</DD><DT>spelling checking 64</DT><DT>SpellingChecker 7173</DT><DT>SpellingCheckerVisitor 75</DT><DT>StandardMazeBuilder 103</DT><DT>State 305</DT><DD>C++ idiom for, <I>see</I> envelope-letter idiom</DD><DD>in catalog summary 9</DD><DD>use of delegation in 21</DD><DT>State</DT><DD>participant of State 306, 306c</DD><DT>state</DT><DD>accumulating during traversal 336</DD><DD>avoiding inconsistent 308</DD><DD>extrinsic 196</DD><DD>incremental changes to 287</DD><DD>intrinsic 196</DD><DD>sharing 308, <I>see also</I> Flyweight</DD><DT>state transitions</DT><DD>atomic 308</DD><DD>defining 308</DD><DD>table-driven 308</DD><DT>Strategy 315</DT><DD>compared with Decorator 179</DD><DD>in catalog summary 8</DD><DD>Lexi's use of 42</DD><DD>use in Choices 193</DD><DD>use in Model/View/Controller 6</DD><DD>use of delegation in 21</DD><DT>Strategy 180o</DT><DD>making optional 320</DD><DD>participant of Strategy 316c, 316</DD><DT>strategy 315</DT><DT>Stream 183, 183c</DT><DT>StreamDecorator 183, 183c</DT><DT>stretchability 320</DT><DT>Stroustrup, Bjarne 160</DT><DT>structural pattern 10, 137</DT><DD>comparison between class and object scope 137</DD><DD>discussion of 219</DD><DT>subclass, <I>see</I> class, subclass</DT><DT>subclassing</DT><DD>extending functionality by 24</DD><DT>Subject 301</DT><DD>avoiding dangling references to 297</DD><DD>combining with Observer 300</DD><DD>participant of Observer 294c, 295, 295i, 300c, 347i</DD><DD>participant of Proxy 209co, 210</DD><DT>subject 294</DT><DD>mapping to observers 297</DD><DD>observing more than one 297</DD><DT>subsystem 361</DT><DD>simplifying interface to, <I>see</I> Facade</DD><DT>subtype, <I>see</I> type, subtype</DT><DT>successor 224</DT><DD>connecting in chain 227</DD><DD>implementing chain of 225</DD><DT>superclass 361, <I>see also</I> class, parent</DT><DT>supertype, <I>see</I> type, supertype</DT><DT>Surrogate, <I>see</I> Proxy</DT><DT>Sutherland, Ivan 125</DT><DT>swaps 323</DT></DL><H2>T</H2><DL><DT>Target</DT><DD>participant of Adapter 141, 141c</DD><DT>TCP protocol 309</DT><DT>TCPConnection 305, 305c, 309</DT><DT>TCPState 305, 305c, 310</DT><DT>template 21, <I>see also</I> parameterized types</DT><DD>used to implement Command 239</DD><DD>used to implement Factory Method 113</DD><DD>used to implement Strategy 319, 323</DD><DT>Template Method 325</DT><DD>calling Factory Methods 116</DD><DD>in catalog summary 9</DD><DD>naming conventions for 329</DD><DD>used to implement Iterator 270</DD><DT>template method 326</DT><DT>terminal symbol 246</DT><DD>shared using Flyweight 247</DD><DT>TerminalExpression</DT><DD>participant of Interpreter 245c, 246</DD><DT>TEX 42, 97, 316</DT><DT>TeXCompositor 42c, 315, 315c, 322</DT><DT>TextShape 139, 140c, 146, 147</DT><DT>TextView</DT><DD>use in Adapter 139, 140c, 146</DD><DD>use in Decorator 176c, 176o</DD><DT>ThingLab 125</DT><DT>THINK</DT><DD>use of Command 242</DD><DD>use of Observer 303</DD><DT>Token, <I>see</I> Memento</DT><DT>Tool 117, 118c, 313, 313c</DT><DT>toolkit 26, 233, 362</DT><DD>see Andrew</DD><DD>see Booch Components</DD><DD>see Fresco</DD><DD>see InterViews</DD><DD>see IRIS Inventor</DD><DD>see Object Windows</DD><DD>see QOCA</DD><DD>see THINK</DD><DT>Transaction, <I>see</I> Command</DT><DT>transaction 236</DT><DT>transparent enclosure 43, <I>see also</I> Decorator</DT><DT>traversal of aggregate objects, <I>see also</I> Iterator</DT><DD>across class hierarchies 336</DD><DD>assigning responsibility for in Visitor 339</DD><DD>inorder, preorder, postorder 262</DD><DT>TreeAccessorDelegate 145, 145c</DT><DT>TreeDisplay 142, 144, 144c, 145c</DT><DT>two-way adapter, <I>see</I> adapter, two-way</DT><DT>type 13</DT><DD>compared with class 16</DD><DD>C++, definition in 17</DD><DD>Eiffel, definition in 17</DD><DD>Smalltalk, definition in 17</DD><DD>subtype 13</DD><DD>supertype 13</DD><DT>type-checking 332</DT><DD>to identify requests at run-time 228</DD><DD><I>see also</I> dynamic_cast</DD><DT>TypeCheckingVisitor 332c</DT></DL><H2>U</H2><DL><DT>undo/redo 5960, 6264, 235, 238, 283, 287</DT><DD>avoiding error accumulation during 239</DD><DT>Unidraw</DT><DD>use of Adapter 143</DD><DD>use of Chain of Responsibility 232</DD><DD>use of Command 232, 242</DD><DD>use of Factory Method 111</DD><DD>use of Iterator 270</DD><DD>use of Mediator 282</DD><DD>use of Memento 289</DD><DD>use of Observer 303</DD><DD>use of Prototype 126</DD><DD>use of State 313</DD><DT>UnsharedConcreteFlyweight</DT><DD>participant of Flyweight 199</DD><DT>updates</DT><DD>encapsulating complex 299</DD><DD>limiting unexpected 296</DD><DD>protocol for in Observer 296</DD><DD>triggering 297</DD></DL><H2>V</H2><DL><DT>Validator 323</DT><DT>VariableExp 252</DT><DT>VariableRefNode 333c</DT><DT>ViewManager 281, 281o</DT><DT>Virtual Constructor, <I>see</I> Factory Method</DT><DT>virtual memory framework 192</DT><DT>virtual proxy, <I>see</I> proxy, virtual</DT><DT>Visitor 331</DT><DD>combined with Interpreter 247, 255</DD><DD>in catalog summary 9</DD><DD>interaction diagram for Lexi 74</DD><DD>use in Lexi 76</DD><DD>use in compiler example 190, 331</DD><DD>use of delegation in 21</DD><DT>Visitor 75, 337</DT><DD>participant of Visitor 334, 334c</DD><DT>visitor 74, 332</DT><DT>VisualComponent 176, 176c, 180</DT><DT>vocabulary, defining common 352</DT></DL><H2>W</H2><DL><DT>Wall 82c, 83</DT><DT>white-box reuse, <I>see</I> reuse, white-box</DT><DT>Widget 224c, 230, 275c, 278</DT><DT>widget 48, 87</DT><DD>Glyph hierarchy 50</DD><DT>WidgetFactory 87</DT><DT>Window 20c, 39, 54c, 55c, 152, 156</DT><DD>configuring with WindowImp 5758</DD><DD>interface 53</DD><DT>window systems 35</DT><DD>support in Lexi 51</DD><DT>WindowImp 55, 55c, 152, 152c, 157</DT><DD>subclasses 55</DD><DT>Windows, <I>see</I> Microsoft Windows</DT><DT>WindowSystemFactory 57</DT><DT>Wrapper, <I>see</I> Adapter, Decorator</DT><DT>WYSIWYG 33</DT></DL><H2>X</H2><DL><DT>X Window System 52, 56, 57, 151, 158</DT><DT>XIconWindow 151, 151c</DT><DT>XWindow 151, 151c</DT><DT>XWindowImp 152, 152c, 158</DT>